stages:
  - build
  - updating artifacts

variables:
  # required for docker:dind non-TLS mode
  DOCKER_TLS_CERTDIR: ""
  # optional driver choice
  DOCKER_DRIVER: overlay2
  # ensure docker CLI talks to the service by hostname 'docker'
  DOCKER_HOST: tcp://docker:2375/
  # docker Image Tag
  IMAGE_TAG: "${CI_COMMIT_SHORT_SHA}-${CI_COMMIT_TAG}"
  # docker Image Name
  IMAGE_NAME: "${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}"


build_image:
  stage: build
  image: docker:latest

  services:
    - name: docker:24.0.5-dind   # âœ… Specific version that works with SaaS runner
      command: ["--mtu=1460"]    # Recommended for GitLab SaaS networking
  script:
    - echo "Logging in to Docker Hub..."
    # use --password-stdin so login works in non-interactive CI
    - echo "$DOCKERHUB_PASSWORD" | docker login --username "$DOCKERHUB_USERNAME" --password-stdin

    - echo "Building Docker image..."
    - docker build -t "$DOCKERHUB_USERNAME/myapp:$IMAGE_NAME" .

    - echo "Pushing Docker image..."
    - docker push "$DOCKERHUB_USERNAME/myapp:$IMAGE_NAME"

    # Save tag for next stage (if you add more stages later)
    - echo "IMAGE_TAG" >> build.env
    - echo "IMAGE_NAME" >> build.env

  artifacts:
    reports:
      dotenv: build.env

update_artifacts:
  stage: updating artifacts
  script:
    - echo "Logging into Github"
    - git clone https://github.com/huzaifadevcloud/Deploy-Todo-App-Using-Jenkins-and-ArgoCD
    - cd deploy
    - cat deploy.yaml
    #- 'sed -i -E "s|^[[:space:]]*image:[[:space:]]*.*|  image: huzaifadev/myapp:${IMAGE_TAG}|g" deploy.yaml'
    - 'sed -i -E "s|^([[:space:]]*)image:[[:space:]]*.*|\\1image: huzaifadev/myapp:${IMAGE_TAG}|g" deploy.yaml'
    - cat deploy.yaml
    - git config --global user.name "$GITHUB_USERNAME"
    - git config --global user.email "$GITHUB_EMAIL"
    # Clone the GitHub repo using PAT authentication
    - git clone https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com/$GITHUB_REPO.git
    - git add "Changed artifact file"
    - git branch -m main
    - git pu
